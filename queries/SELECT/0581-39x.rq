PREFIX cube: <https://cube.link/>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX schema: <http://schema.org/>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?dimensionIri rdf:first ?unversionedValue.
  ?unversionedValue schema:name ?name.
  ?unversionedValue schema:alternateName ?alternateName.
  ?unversionedValue schema:description ?description.
  ?unversionedValue schema:identifier ?identifier.
  ?unversionedValue schema:position ?position.
  ?unversionedValue schema:color ?color.
  ?unversionedValue geo:hasGeometry ?geometry.
  ?unversionedValue schema:latitude ?latitude.
  ?unversionedValue schema:longitude ?longitude.
}
WHERE {
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/canton>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri;
        schema:version ?version;
        (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/canton>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri.
      FILTER(NOT EXISTS { ?dimension schema:version ?version. })
      ?dimension (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/canton>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri;
            schema:version ?version.
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/canton>
      }
      ?observation ?dimensionIri ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/canton>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri.
          FILTER(NOT EXISTS { ?dimension schema:version ?version. })
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/canton>
      }
      ?observation ?dimensionIri ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  UNION
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/category>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri;
        schema:version ?version;
        (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/category>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri.
      FILTER(NOT EXISTS { ?dimension schema:version ?version. })
      ?dimension (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/category>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri;
            schema:version ?version.
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/category>
      }
      ?observation ?dimensionIri ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/category>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri.
          FILTER(NOT EXISTS { ?dimension schema:version ?version. })
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/category>
      }
      ?observation ?dimensionIri ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  UNION
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/period>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri;
        schema:version ?version;
        (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/period>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri.
      FILTER(NOT EXISTS { ?dimension schema:version ?version. })
      ?dimension (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/period>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri;
            schema:version ?version.
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/period>
      }
      ?observation ?dimensionIri ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/period>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri.
          FILTER(NOT EXISTS { ?dimension schema:version ?version. })
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/period>
      }
      ?observation ?dimensionIri ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  UNION
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/product>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri;
        schema:version ?version;
        (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/product>
      }
      <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
      ?dimension sh:path ?dimensionIri.
      FILTER(NOT EXISTS { ?dimension schema:version ?version. })
      ?dimension (sh:in/(rdf:rest*)/rdf:first) ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/product>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri;
            schema:version ?version.
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/product>
      }
      ?observation ?dimensionIri ?versionedValue.
      ?versionedValue schema:sameAs ?unversionedValue.
    }
  }
  UNION
  {
    SELECT DISTINCT ?dimensionIri ?versionedValue ?unversionedValue WHERE {
      {
        SELECT ?observation WHERE {
          VALUES ?dimensionIri {
            <https://energy.ld.admin.ch/elcom/electricityprice/dimension/product>
          }
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationConstraint/sh:property) ?dimension.
          ?dimension sh:path ?dimensionIri.
          FILTER(NOT EXISTS { ?dimension schema:version ?version. })
          FILTER(NOT EXISTS { ?dimension sh:in ?in. })
          <https://energy.ld.admin.ch/elcom/electricityprice-canton> (cube:observationSet/cube:observation) ?observation.
        }
      }
      VALUES ?dimensionIri {
        <https://energy.ld.admin.ch/elcom/electricityprice/dimension/product>
      }
      ?observation ?dimensionIri ?versionedValue.
      BIND(?versionedValue AS ?unversionedValue)
    }
  }
  OPTIONAL {
    ?versionedValue schema:name ?name_de.
    FILTER((LANG(?name_de)) = "de")
  }
  OPTIONAL {
    ?versionedValue schema:name ?name_fr.
    FILTER((LANG(?name_fr)) = "fr")
  }
  OPTIONAL {
    ?versionedValue schema:name ?name_it.
    FILTER((LANG(?name_it)) = "it")
  }
  OPTIONAL {
    ?versionedValue schema:name ?name_en.
    FILTER((LANG(?name_en)) = "en")
  }
  OPTIONAL {
    ?versionedValue schema:name ?name_.
    FILTER((LANG(?name_)) = "")
  }
  BIND(COALESCE(?name_de, ?name_fr, ?name_it, ?name_en, ?name_) AS ?name)
  OPTIONAL {
    ?versionedValue schema:description ?description_de.
    FILTER((LANG(?description_de)) = "de")
  }
  OPTIONAL {
    ?versionedValue schema:description ?description_fr.
    FILTER((LANG(?description_fr)) = "fr")
  }
  OPTIONAL {
    ?versionedValue schema:description ?description_it.
    FILTER((LANG(?description_it)) = "it")
  }
  OPTIONAL {
    ?versionedValue schema:description ?description_en.
    FILTER((LANG(?description_en)) = "en")
  }
  OPTIONAL {
    ?versionedValue schema:description ?description_.
    FILTER((LANG(?description_)) = "")
  }
  BIND(COALESCE(?description_de, ?description_fr, ?description_it, ?description_en, ?description_) AS ?description)
  OPTIONAL {
    ?versionedValue schema:alternateName ?alternateName_de.
    FILTER((LANG(?alternateName_de)) = "de")
  }
  OPTIONAL {
    ?versionedValue schema:alternateName ?alternateName_fr.
    FILTER((LANG(?alternateName_fr)) = "fr")
  }
  OPTIONAL {
    ?versionedValue schema:alternateName ?alternateName_it.
    FILTER((LANG(?alternateName_it)) = "it")
  }
  OPTIONAL {
    ?versionedValue schema:alternateName ?alternateName_en.
    FILTER((LANG(?alternateName_en)) = "en")
  }
  OPTIONAL {
    ?versionedValue schema:alternateName ?alternateName_.
    FILTER((LANG(?alternateName_)) = "")
  }
  BIND(COALESCE(?alternateName_de, ?alternateName_fr, ?alternateName_it, ?alternateName_en, ?alternateName_) AS ?alternateName)
  OPTIONAL { ?versionedValue schema:identifier ?identifier. }
  OPTIONAL { ?versionedValue schema:position ?position. }
  OPTIONAL { ?versionedValue schema:color ?color. }
  OPTIONAL { ?versionedValue geo:hasGeometry ?geometry. }
  OPTIONAL { ?versionedValue schema:latitude ?latitude. }
  OPTIONAL { ?versionedValue schema:longitude ?longitude. }
}